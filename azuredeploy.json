{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ServerPassword": {
            "type": "securestring",
            "metadata": {

                "description": "Password to access the server over ssh"
            }
        },
        "WafPassword": {
            "type": "securestring",
            "metadata": {
                "description": "WAF Login Password"
            }
        }
    },
    "variables": {
        "servervm": "[toLower('app')]",
        "serverstorage": "[concat(variables('servervm'), uniquestring(resourceGroup().id))]",
        "serverpublicip": "[concat(variables('servervm'), '-PublicIP')]",
        "servernsg": "[concat(variables('servervm'), '-nsg')]",
        "vNETName": "[concat('vnet1', '-VirtualNetwork')]",
        "servernic": "[concat(variables('servervm'), '-NetworkInterface')]",
        "serversubnet": "[concat(variables('vNETName'), variables('servervm'), '-Subnet')]",
        "serverpassword": "[parameters('ServerPassword')]",
        "wafsubnet": "[concat(variables('vNETName'), '-WAF', '-Subnet')]",
        "wafvmname": "waf",
        "wafstorage": "[tolower(concat(variables('wafvmname'), uniquestring(resourceGroup().id)))]",
        "wafpublicip": "[concat(variables('wafvmname'), '-PublicIP')]",
        "wafnsg": "[concat(variables('wafvmname'), '-nsg')]",
        "wafnic": "[concat(variables('wafvmname'), '-NetworkInterface')]",
        "wafpassword": "[parameters('WafPassword')]",
        "wafpublisher": "barracudanetworks",
        "wafoffer": "waf",
        "wafsku": "byol"
    },
    "resources": [

        {
            "name": "[toLower(variables('serverstorage'))]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Server Storage Account"
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        {
            "name": "[variables('serverpublicip')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(variables('servervm'), uniqueString(resourceGroup().id)))]"
                }
            }
        },
        {
            "name": "[variables('servernsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule2",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vNETName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('servernsg'))]"
            ],
            "tags": {
                "displayName": "[variables('vNETName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('serversubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('servernsg'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('wafsubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24"
                        }
                    }

                ]
            }
        },
        {
            "name": "[variables('servernic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('serverpublicip'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNETName'))]"
            ],
            "tags": {
                "displayName": "[variables('servernic')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('serverpublicip'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNETName'), variables('serversubnet'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('servervm')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('servernic'))]"
            ],
            "tags": {
                "displayName": "[variables('servervm')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A4_v2"
                },
                "osProfile": {
                    "computerName": "[variables('servervm')]",
                    "adminUsername": "labuser",
                    "adminPassword": "[variables('serverpassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('servervm'),'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('servernic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('serverstorage'))).primaryEndpoints.blob]"
                    }
                }
            }
        },

        {
            "name": "[concat(variables('servervm'), '/customScript1')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "customScript1 for Linux VM"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('servervm'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/selahcloud/barracudawaftestdrive/main/script/customScript.sh"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "sudo nohup bash customScript.sh"
                }
            }
        },
        {
            "name": "[variables('wafstorage')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "WAF Storage Account"
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        {
            "name": "[variables('wafpublicip')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(variables('wafvmname'), uniqueString(resourceGroup().id)))]"
                }
            }
        },
        {
            "name": "[variables('wafnsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule2",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8000",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule3",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule4",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule5",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 104,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('wafnic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('wafpublicip'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNETName'))]"
            ],
            "tags": {
                "displayName": "[variables('wafnic')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('wafpublicip'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNETName'), variables('wafsubnet'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('wafvmname')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('wafnic'))]"
            ],
            "tags": {
                "displayName": "[variables('wafvmname')]"
            },
            "plan": {
                "name": "[variables('wafsku')]",
                "Product": "[variables('wafoffer')]",
                "Publisher": "barracudanetworks"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS2_v2"
                },
                "osProfile": {
                    "computerName": "[variables('wafvmname')]",
                    "adminUsername": "adminUsername",
                    "adminPassword": "[variables('wafpassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('wafpublisher')]",
                        "offer": "[variables('wafoffer')]",
                        "sku": "[variables('wafsku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('wafvmname'), '-OSDisk')]",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('wafnic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', toLower(variables('wafstorage')))).primaryEndpoints.blob]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "ServerPublicIP": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('serverpublicip'))).dnsSettings.fqdn]"
        },
        "BadstoreFQDN": {
            "type": "string",
            "value": "[concat('http://',reference(resourceId('Microsoft.Network/publicIPAddresses',variables('serverpublicip'))).dnsSettings.fqdn)]"
        },
        "PetstoreFQDN": {
            "type": "string",
            "value": "[concat('http://',reference(resourceId('Microsoft.Network/publicIPAddresses',variables('serverpublicip'))).dnsSettings.fqdn,':8080')]"
        },
        "WAFPublicIP": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('wafpublicip'))).dnsSettings.fqdn]"
        },
        "HTTPManagementPortOnWAF": {
            "type": "string",
            "value": "8000"
        },
        "HTTPSManagementPortOnWAF": {
            "type": "string",
            "value": "8443"
        },
        "AvailableTrafficPortsOnWAF": {
            "type": "string",
            "value": "80,8080 and 443"
        }

    }
}